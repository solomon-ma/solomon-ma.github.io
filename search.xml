<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hi3559V200 runtime mapper</title>
    <url>/2020/04/17/Hi3559V200-runtime-mapper/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="a9d5b1935aebcbe3695fc89f2cce812b793552ea1ed5c97a291d914c30c6b74d">5d6ced19660003280fc9ce7167486eef7600811971b123f486fed73e804305b32ae84f23cb30771e77d76c29134382104da65256cf470073a7f3b47d95b6b1d7ef4519e0c2bf58b9f63e55a1470f44b8badbc26800838a82dd08cd617306a86720de234bfd39bdedd1aba116e6fbd0c608729002d17b8774571b3f09535420ad704dd08efc845709bf555accf8344c1f3bc1f9b7b006a90b41eaed9453bb17a758dfedab5a4f3c4c68b600736047b366b497126a6e32ea14f7047c2d306f299cfde9a0d1e1836f22920d830935cadd4a70f3857508ecca1a7f45ac0903d9d0b0de17951e20d246fa98ac70371e06bb98dcb9be54c41a59065aa905e425fcfbfe6299625335f0d81119f3295d38c4b28d0f4c70c723813f3ce10e075e2c91e4501d106b2696323daac5643cd9ac0d3bb501acfe8b66bd604bed0ec545fc005339d49f8f0638e14827f52f2478fa1c2bae2d5a5dfbeb6a02334812e9e2a01a4974abd01b077b3c11a129aa15a6e331dcccc61a584754ad357d27f304c53ede1c19e5b98550f951868e1ec7569eae0b5103ec53177f1d9620afa7901ea7325a5b020fc39b85185e1775aeded3ef030da6d0b48b49b3be73e217940661ce51d9634e4d202d4cf5a710587923778ea564b4ab9bc212ceda9432aa333273be6c293e545dcd48718116422019184560cca402393be78cadd0349ff76f2febb88464cf445b6da3a77c7e1c2129cfa6940bd6e503da26fdd059190c5f955320bfc07e9ffc20255f87cb7cbf54eef079167a42310f48b2a2abb751c0357cdd4e9a985c7c311a641a0afc16edec3809ad04b7c91d68</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>Hi3559V200-基础知识补充(Make)</title>
    <url>/2020/04/17/Hi3559V200-%E5%9F%BA%E7%A1%80%E5%8F%AA%E6%98%AF%E8%A1%A5%E5%85%85-Make/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Reinforcement learning</title>
    <url>/2020/04/17/Reinforcement%20learning/</url>
    <content><![CDATA[<h2 id="Reinforcement-learning"><a href="#Reinforcement-learning" class="headerlink" title="Reinforcement learning"></a>Reinforcement learning</h2><p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gd0p4otsodj312y0qwx4h.jpg" alt="image-20200320210602418"></p>
<p>少数的action才会有reward，大多数的操作reward都是0</p>
<p>Supervised learning ： learning from teacher</p>
<p>Reinforcement Learning：Learning from experience</p>
<p>Alpha GO is supervised learning + Reinforcement Learning</p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gd0p9a33qjj30zw0qgdux.jpg" alt="image-20200320211027376"></p>
<p>应用</p>
<ul>
<li>interactive retrieval</li>
<li>flying helicopter</li>
<li>driving</li>
<li>google Cuts its giant electricity bill with deepmind-powered AI</li>
<li>text generation</li>
<li>playing video game</li>
</ul>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gd0ry8l0bfj313e0t24la.jpg" alt="image-20200320224338033"></p>
<p>一个episode包括了很多turns，直到这个game有了一个结果才有一个reward</p>
<h2 id="Difficulties-of-reinforcement-Learning"><a href="#Difficulties-of-reinforcement-Learning" class="headerlink" title="Difficulties of reinforcement Learning"></a>Difficulties of reinforcement Learning</h2><ul>
<li>Reward delay<ul>
<li>在星球大战里，只有“开火”的动作才会得到reward，但是在开火之前的移动可能更加重要</li>
<li>在下围棋里ALpha GO，有时需要牺牲当前的reward来获取更long-term的reward</li>
</ul>
</li>
<li>Agent的action<ul>
<li>探索！</li>
</ul>
</li>
</ul>
<h2 id="Outline"><a href="#Outline" class="headerlink" title="Outline"></a>Outline</h2><p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gd0s6e0ey4j311m0se7o2.jpg" alt="image-20200320225127823"></p>
<h2 id="Materials"><a href="#Materials" class="headerlink" title="Materials"></a>Materials</h2><p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gd0sfglo12j30ys0nah4b.jpg" alt="image-20200320230011557"></p>
<h2 id="Policy-based-Approach-（Learning-an-actor）"><a href="#Policy-based-Approach-（Learning-an-actor）" class="headerlink" title="Policy-based Approach （Learning an actor）"></a>Policy-based Approach （Learning an actor）</h2><ul>
<li>Neural network as Actor</li>
</ul>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gd1oinnopcj313c0mo4f9.jpg" alt="image-20200321173025822"></p>
<ul>
<li>Goodness of Actor</li>
</ul>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gd1oo8fuhmj310o0pqnip.jpg" alt="image-20200321173547704"></p>
<p>由于每次游戏的动作和环境都是一个随机值，因此此处我们是希望R的期望值最大</p>
<p>计算此期望值</p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gd9jflkqnrj310q0pgk81.jpg" alt="image-20200328123853573"></p>
]]></content>
  </entry>
  <entry>
    <title>HI3559V200 基础知识补充(内联函数)</title>
    <url>/2020/04/17/HI3559V200-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85-%E5%86%85%E8%81%94%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="内联函数"><a href="#内联函数" class="headerlink" title="内联函数"></a>内联函数</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>在C语言中，如果一些函数被频繁调用，不断地有函数入栈，即<strong>函数栈</strong>，会造成栈空间或<strong>栈内存</strong>的大量消耗。</p>
<p>为了解决这个问题，特别的引入了<strong>inline修饰符</strong>，表示为<strong>内联函数</strong>。</p>
<h2 id="Sample-code"><a href="#Sample-code" class="headerlink" title="Sample code"></a>Sample code</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//函数定义为inline即:内联函数  </span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span>* <span class="title">dbtest</span><span class="params">(<span class="keyword">int</span> a)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">	<span class="keyword">return</span> (i % <span class="number">2</span> &gt; <span class="number">0</span>) ? <span class="string">"奇"</span> : <span class="string">"偶"</span>;  </span><br><span class="line">&#125;   </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;  </span><br><span class="line">	<span class="keyword">for</span> (i=<span class="number">1</span>; i &lt; <span class="number">100</span>; i++) </span><br><span class="line">	&#123;  </span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"i:%d    奇偶性:%s /n"</span>, i, dbtest(i));      </span><br><span class="line">	&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面的例子就是标准的内联函数的用法，使用inline修饰带来的好处我们表面看不出来，其实在内部的工作就是在每个for循环的内部任何调用dbtest(i)的地方都换成了<code>(i%2&gt;0)?&quot;奇&quot;:&quot;偶&quot;</code>这样就避免了频繁调用函数对栈内存重复开辟所带来的消耗。</p>
<h2 id="权衡是否需要内联函数"><a href="#权衡是否需要内联函数" class="headerlink" title="权衡是否需要内联函数"></a>权衡是否需要内联函数</h2><p>但是这其中要有个权衡，如果内联函数较为庞大的话，每次的调用都需要将内联函数中的代码完全copy一份到调用位置，我们将此开销定义为$Cost_1$</p>
<p>而我们将函数调用的使用函数栈的开销定义为$Cost_2$</p>
<p>只有当$Cost_1 &lt; Cost_2$时，使用内联函数才有意义。</p>
<h2 id="内联函数的编程风格"><a href="#内联函数的编程风格" class="headerlink" title="内联函数的编程风格"></a>内联函数的编程风格</h2><p>如下风格的函数Foo 不能成为内联函数：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Foo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>; <span class="comment">// inline 仅与函数声明放在一起</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Foo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>而如下风格的函数Foo 则成为内联函数：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Foo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Foo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> <span class="comment">// inline 与函数定义体放在一起</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>inline</code>是 <strong>用于实现的关键字</strong></p>
]]></content>
      <tags>
        <tag>海思</tag>
      </tags>
  </entry>
  <entry>
    <title>Conditional GAN</title>
    <url>/2020/03/30/Conditional%20GAN/</url>
    <content><![CDATA[<h1 id="Conditional-GAN"><a href="#Conditional-GAN" class="headerlink" title="Conditional GAN"></a>Conditional GAN</h1><p>输入文字，产生对应图片</p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco1ift1utj311c0sakbh.jpg" alt="image-20200309222213089"></p>
<p>问题引出：由于文字的描述对应的图片会有各种不同的形态，因此模式的输出较为复杂</p>
]]></content>
  </entry>
  <entry>
    <title>自然语言处理</title>
    <url>/2020/03/22/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="自然语言处理"><a href="#自然语言处理" class="headerlink" title="自然语言处理"></a>自然语言处理</h1><h2 id="word2vec"><a href="#word2vec" class="headerlink" title="word2vec"></a>word2vec</h2><ul>
<li>词向量是用来表示词的向量。把词映射为实数域向量的技术叫做word embedding</li>
<li>word2vec包含跳字模型和连续词袋模型。</li>
</ul>
<h3 id="1-为什么不采用one-hot"><a href="#1-为什么不采用one-hot" class="headerlink" title="1. 为什么不采用one-hot"></a>1. 为什么不采用one-hot</h3><p>矩阵过于稀疏</p>
<p>假设这个词在词典中索引为$i$，当它为中心词时向量表示为$v_i $，而为背景词时向量表示为。设中心词$w_c$在词典中索引为c，背景词在词典中索引为，给定中心词生成背景词的条件概率可以通过对向量内积做softmax运算而得到</p>
<h3 id="2-跳字模型"><a href="#2-跳字模型" class="headerlink" title="2. 跳字模型"></a>2. 跳字模型</h3><p>跳字模型假设<strong>基于</strong>某个<strong>中心词</strong>来<strong>生成</strong>它在文本序列周围<strong>背景词</strong></p>
<p>$P(“the”,”man”,”his”,”son”| “loves”)$</p>
<h3 id="3-连续词袋模型"><a href="#3-连续词袋模型" class="headerlink" title="3. 连续词袋模型"></a>3. 连续词袋模型</h3><p>连续词袋模型假设<strong>基于</strong>某中心词在文本序列前后的<strong>背景词</strong>来<strong>生成</strong>该<strong>中心词</strong></p>
<p>$P(“loves” | “the”,”man”,”his”,”son”)$</p>
<h2 id="Reference："><a href="#Reference：" class="headerlink" title="Reference："></a>Reference：</h2><p><a href="https://www.zybuluo.com/Dounm/note/591752" target="_blank" rel="noopener">https://www.zybuluo.com/Dounm/note/591752</a></p>
]]></content>
  </entry>
  <entry>
    <title>GAN</title>
    <url>/2020/03/08/GAN/</url>
    <content><![CDATA[<h1 id="GAN"><a href="#GAN" class="headerlink" title="GAN"></a>GAN</h1><h2 id="GAN-as-Structured-Learning"><a href="#GAN-as-Structured-Learning" class="headerlink" title="GAN as Structured Learning"></a>GAN as Structured Learning</h2><h3 id="Structured-Learning"><a href="#Structured-Learning" class="headerlink" title="Structured Learning"></a>Structured Learning</h3><p>Machine learning is to find a function f</p>
<p>$f : X -&gt; Y$</p>
<ul>
<li>Regression : output a scalar</li>
<li>Classification : output a “class” (one-hot vector)</li>
<li>Structured learning/prediction: output a sequence, a matrix, a graph, a tree …</li>
</ul>
<h3 id="Why-structured-Learning-Challenging"><a href="#Why-structured-Learning-Challenging" class="headerlink" title="Why structured Learning Challenging?"></a>Why structured Learning Challenging?</h3><ul>
<li>One-shot/zero-shot learning<ul>
<li>in classification, each class has some examples.</li>
<li>in structured learning,<ul>
<li>if you consider each possible output as a “class”…</li>
<li>Since the output space is huge, most “classes” do not have any training data.</li>
<li>Machine has to create new stuff during testing</li>
<li>need more intelligence</li>
</ul>
</li>
</ul>
</li>
<li>Machine has to learn to do planning<ul>
<li>machine generated objects component-by-component, but is should have a big picture in its mind.</li>
<li>Because the output components have dependency, they should be considered globally.</li>
</ul>
</li>
<li>Image Generation</li>
<li>Sentence Generation</li>
</ul>
<h3 id="Structured-Learning-Approach"><a href="#Structured-Learning-Approach" class="headerlink" title="Structured Learning Approach"></a>Structured Learning Approach</h3><p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gclnw7p9wzj30z00na7g9.jpg" alt="image-20200307205951259"></p>
<h2 id="Generator"><a href="#Generator" class="headerlink" title="Generator"></a>Generator</h2><p>generator是否可以自己生成图片</p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gclnzdsu4yj310k0sgnb2.jpg" alt="image-20200307210300360"></p>
<p>由图片生成code得这一步需要用神经网络来train，但是只是生成了code无法得到最优解。因此用encoder-decoder网络</p>
<h3 id="Auto-encoder"><a href="#Auto-encoder" class="headerlink" title="Auto-encoder"></a>Auto-encoder</h3><p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gclopqgpifj30ys0oyqe7.jpg" alt="image-20200307212819980"></p>
<p><img src="/Users/huima/hexo/themes/next/source/images/image-20200308201232744.png" alt="image-20200308201232744"></p>
<p>a和b的平均产生的不一定是1</p>
<p>因此我们需要使用Variational auto-encoder（VAE）</p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gcms80kk0tj312y0t27l3.jpg" alt="image-20200308201411620"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gcmse85wvyj310e0soe02.jpg" alt="image-20200308202111950"></p>
<p>虽然下列的有6个pixel的error，但是其更像是手写的数字</p>
<h2 id="Dicriminator"><a href="#Dicriminator" class="headerlink" title="Dicriminator"></a>Dicriminator</h2><p>是否可以用discriminator来生成objects？</p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gcmsmw71xxj310u0p4wtv.jpg" alt="image-20200308202933151"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0395ndaj30wk0m6dr2.jpg" alt="image-20200309213257730"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco07ehz0dj30ui0ooal5.jpg" alt="image-20200309213701168"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco08cz39pj312c0pmwv9.jpg" alt="image-20200309213755380"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco09ho1f4j312u0pq7lc.jpg" alt="image-20200309213900856"></p>
<p>问题是我们只有positive example，而如何生成比较好的negative example就很重要。</p>
<p>好想变成了鸡生蛋蛋生鸡的问题！</p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0bhmzthj30xm0okndy.jpg" alt="image-20200309214054545"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0gtmzahj311i0te7oo.jpg" alt="image-20200309214602274"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0iaf3unj311w0rak7r.jpg" alt="image-20200309214727392"></p>
<h3 id="Generator-VS-Discriminator"><a href="#Generator-VS-Discriminator" class="headerlink" title="Generator VS Discriminator"></a>Generator VS Discriminator</h3><p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0k5ryd3j30xm0m47cf.jpg" alt="image-20200309214916270"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0lnwc7uj30y20pwh2i.jpg" alt="image-20200309215042908"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0nh9o4tj30w60pswng.jpg" alt="image-20200309215226760"></p>
<h3 id="GAN-VS-VAE"><a href="#GAN-VS-VAE" class="headerlink" title="GAN VS VAE"></a>GAN VS VAE</h3><p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0ptoc0bj311i0r8dyt.jpg" alt="image-20200309215441966"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gco0q78nfyj312o0maqd9.jpg" alt="image-20200309215504313"></p>
]]></content>
  </entry>
  <entry>
    <title>MNN编译安装报错</title>
    <url>/2020/03/06/MNN%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<p>在按照官方的安装步骤之前</p>
<p>先进入MNN_ROOT/schema目录下<code>./generate.h</code></p>
<p>cmake的所有预编译指令都在MNN_ROOT/CMakeLists.txt下</p>
<p>可以直接编辑此文件将所需要的模块置为ON</p>
<p>然后再安装官方指导：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">mkdir</span> <span class="string">build</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">build</span></span><br><span class="line"><span class="attr">cmake</span> <span class="string">..</span></span><br><span class="line"><span class="attr">make</span> <span class="string">-j 8</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>MNN</tag>
      </tags>
  </entry>
  <entry>
    <title>mobilenet_v1</title>
    <url>/2020/02/29/mobilenet-v1/</url>
    <content><![CDATA[<h4 id="DW（depthwidse-separable-convolution"><a href="#DW（depthwidse-separable-convolution" class="headerlink" title="DW（depthwidse separable convolution)"></a>DW（depthwidse separable convolution)</h4><p>白给的性能提升，干嘛不要</p>
<img src="https://tva1.sinaimg.cn/large/00831rSTgy1gcdf6b85amj30j20qmq5l.jpg" alt="image-20200229143704058" style="zoom:50%;" />

<table>
<thead>
<tr>
<th></th>
<th>Channel</th>
<th>kernel_size</th>
</tr>
</thead>
<tbody><tr>
<td>Input</td>
<td>M</td>
<td>$ D_K $</td>
</tr>
<tr>
<td>Output</td>
<td>N</td>
<td>$D_F $</td>
</tr>
</tbody></table>
<p>标准卷积计算量：$D_K * D_K * M * N * D_F * D_F$</p>
<p>DW计算量：$D_k * D_k * M * D_F * D_F + M * N * D_F * D_F$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv_dw</span><span class="params">(inp, oup, stride)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> nn.Sequential(</span><br><span class="line">                nn.Conv2d(inp, inp, <span class="number">3</span>, stride, <span class="number">1</span>, groups=inp, bias=<span class="literal">False</span>),</span><br><span class="line">                nn.BatchNorm2d(inp),</span><br><span class="line">                nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">    </span><br><span class="line">                nn.Conv2d(inp, oup, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, bias=<span class="literal">False</span>),</span><br><span class="line">                nn.BatchNorm2d(oup),</span><br><span class="line">                nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            )</span><br></pre></td></tr></table></figure>

<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">CLASS torch.nn.Conv2d(in_channels, out_channels, kernel_size, <span class="attribute">stride</span>=1, <span class="attribute">padding</span>=0, <span class="attribute">dilation</span>=1, <span class="attribute">groups</span>=1, <span class="attribute">bias</span>=<span class="literal">True</span>, <span class="attribute">padding_mode</span>=<span class="string">'zeros'</span>)</span><br></pre></td></tr></table></figure>

<p><code>groups</code> controls the connections between inputs and outputs. <code>in_channels</code> and <code>out_channels</code> must both be divisible by <code>groups</code>. For example,</p>
<blockquote>
<ul>
<li>At groups=1, all inputs are convolved to all outputs.</li>
<li>At groups=2, the operation becomes equivalent to having two conv layers side by side, each seeing half the input channels, and producing half the output channels, and both subsequently concatenated.</li>
<li>At groups= <code>in_channels</code>, each input channel is convolved with its own set of filters, of size: $\left\lfloor\frac{out_channels}{in_channels}\right\rfloor = K$</li>
</ul>
</blockquote>
<img src="https://tva1.sinaimg.cn/large/00831rSTgy1gcdf6hwbygj30zc0pin3g.jpg" alt="image-20200229174950253" style="zoom:50%;" />









<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h4><p><a href="https://github.com/marvis/pytorch-mobilenet/blob/master/main.py" target="_blank" rel="noopener">https://github.com/marvis/pytorch-mobilenet/blob/master/main.py</a></p>
]]></content>
      <tags>
        <tag>移动端网络</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>mobilenet_v3</title>
    <url>/2020/02/29/mobilenet-v3/</url>
    <content><![CDATA[<h4 id="hswish"><a href="#hswish" class="headerlink" title="hswish"></a>hswish</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hswish</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        out = x * F.relu6(x + <span class="number">3</span>, inplace=<span class="literal">True</span>) / <span class="number">6</span></span><br><span class="line">        <span class="keyword">return</span> out</span><br></pre></td></tr></table></figure>



<h4 id="hsigmoid"><a href="#hsigmoid" class="headerlink" title="hsigmoid"></a>hsigmoid</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hsigmoid</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        out = F.relu6(x + <span class="number">3</span>, inplace=<span class="literal">True</span>) / <span class="number">6</span></span><br><span class="line">        <span class="keyword">return</span> out</span><br></pre></td></tr></table></figure>



<h4 id="SeModule"><a href="#SeModule" class="headerlink" title="SeModule"></a>SeModule</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SeModule</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_size, reduction=<span class="number">4</span>)</span>:</span></span><br><span class="line">        super(SeModule, self).__init__()</span><br><span class="line">        self.se = nn.Sequential(</span><br><span class="line">            nn.AdaptiveAvgPool2d(<span class="number">1</span>),</span><br><span class="line">            nn.Conv2d(in_size, in_size // reduction, kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>, bias=<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm2d(in_size // reduction),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">            nn.Conv2d(in_size // reduction, in_size, kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>, bias=<span class="literal">False</span>),</span><br><span class="line">            nn.BatchNorm2d(in_size),</span><br><span class="line">            hsigmoid()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> x * self.se(x)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>移动端网络</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>tmux常用指令</title>
    <url>/2020/02/29/tmux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<p>详细的配置和使用教程请参考reference下的louiszhai的博客。</p>
<p><strong>友情提示：</strong></p>
<p>小伙伴们学习之初先弄清楚两个区别</p>
<ul>
<li>会话和面板</li>
<li>退出和断开</li>
</ul>
<p><code>tmux new -s demo</code></p>
<p><code>tmux detach</code></p>
<p><code>tmux ls</code></p>
<p><code>tmux a -t demo</code></p>
<p><code>tmux kill-session -t demo</code></p>
<table>
<thead>
<tr>
<th>前缀</th>
<th>指令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + b</td>
<td>Ctrl + z</td>
<td>挂起当前绘画</td>
</tr>
<tr>
<td>Ctrl + b</td>
<td>“</td>
<td>当前面板上下一分为二，下侧新建面板</td>
</tr>
<tr>
<td>Ctrl + b</td>
<td>%</td>
<td>当前面板左右一分为二，右侧新建面板</td>
</tr>
<tr>
<td></td>
<td>x</td>
<td>关闭当前面板</td>
</tr>
</tbody></table>
<h4 id="Reference："><a href="#Reference：" class="headerlink" title="Reference："></a>Reference：</h4><p><a href="https://louiszhai.github.io/2017/09/30/tmux/?nsukey=sMp5CqCQZvJyCawq0vUlqLccV8n9jr%2F25yS59%2BxxsaeSmLxg31b2x7pHehI5%2BGCKykJGT%2BBSdzOcGFTlP678aaTylpwL3KOPgGiOD6YDSPUdUkQG3u8w5%2BjepXpC71M%2FHBtoESqckA7w13qg%2BFvpytSyKxEhkr%2Fwy7zemKxCumL63R4K8G97j1v7yTlETGzzBH0lx94TYd8vQClPzpGbxw%3D%3D#新建会话" target="_blank" rel="noopener">https://louiszhai.github.io/2017/09/30/tmux/?nsukey=sMp5CqCQZvJyCawq0vUlqLccV8n9jr%2F25yS59%2BxxsaeSmLxg31b2x7pHehI5%2BGCKykJGT%2BBSdzOcGFTlP678aaTylpwL3KOPgGiOD6YDSPUdUkQG3u8w5%2BjepXpC71M%2FHBtoESqckA7w13qg%2BFvpytSyKxEhkr%2Fwy7zemKxCumL63R4K8G97j1v7yTlETGzzBH0lx94TYd8vQClPzpGbxw%3D%3D#%E6%96%B0%E5%BB%BA%E4%BC%9A%E8%AF%9D</a></p>
]]></content>
      <tags>
        <tag>tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx反向代理</title>
    <url>/2020/02/29/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h3 id="Nginx-反向代理"><a href="#Nginx-反向代理" class="headerlink" title="Nginx 反向代理"></a>Nginx 反向代理</h3><p>写反向代理的帖子，不放个图总显得不太专业。找个网图贴一下。</p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcd5yqlml1j319u0b4nb4.jpg" alt="image-20200229123459279"></p>
<h4 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h4><ul>
<li>proxy和client同属一个LAN</li>
<li>用途：<ul>
<li>为了在防火墙内的局域网提供访问Internet的途径。</li>
<li>使用缓冲特性减少网络使用率</li>
</ul>
</li>
<li>安全性：允许客户端通过它访问任意网站并隐蔽客户端自身</li>
</ul>
<p>举个栗子🌰🌰：</p>
<p>老哥们都翻过墙吧，那咋翻的呢？ 唠一下</p>
<p>给个代号，假设你是墙内的用户A，现在就是想上Google，上不了气不气。墙外的小伙伴用户B，就在香港距离你深圳的家几公里，就可以上，难受不？那么我们是否可以这样呢， A –&gt; B –&gt; Google , Google –&gt; B –&gt; A。这样我们就把小伙伴B作为了一个正向代理。</p>
<h4 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h4><ul>
<li>proxy和server同属于一个LAN</li>
<li>用途：<ul>
<li>将防火墙后面的服务器提供给Internet用户访问</li>
<li>完成负载均衡等功能 </li>
</ul>
</li>
<li>安全性：对外是透明的，访问者并不知道自己访问的是代理。</li>
</ul>
<p>再来举个栗子🌰🌰🌰：（举点我亲身碰到的事吧）</p>
<ul>
<li>一般公司里需要开公网ip的时候，网络管理员一定会给你开启某些端口，诸如443(https)，8080(hhtp)。可是我们再想在此服务器上加设别的服务时，难不成每一次都要去求网管？ 网管不耐烦了咋搞。 这时候Nginx反向代理就可以救场了。我们对外还是让用户访问443端口，但是我们可以把服务转嫁到其他端口上去。</li>
<li>反向代理还不仅仅是在同一台服务器上进行端口之间的转发，我们还可以把服务从一台公网服务器转嫁到内网服务器上去。这样对外，用户还是访问公网服务器的ip，但是我们已经把服务转移到了内网服务器来执行。</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">events&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"><span class="attr">http&#123;</span></span><br><span class="line">    <span class="attr">upstream</span> <span class="string">ggzy &#123;</span></span><br><span class="line">       <span class="attr">server</span> <span class="string">127.0.0.1:1399;</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line"><span class="comment">    # 80端口配置，可配置多个Virtual Host</span></span><br><span class="line">    <span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="attr">listen</span>  <span class="string">80;</span></span><br><span class="line">        <span class="attr">index</span> <span class="string">index index.htm index.py index.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">server_name</span> <span class="string">app.truelore.cn;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">location</span> <span class="string">/ &#123;</span></span><br><span class="line">            <span class="attr">proxy_pass_header</span> <span class="string">Server;</span></span><br><span class="line">            <span class="attr">proxy_set_header</span> <span class="string">Host $http_host;</span></span><br><span class="line">            <span class="attr">proxy_set_header</span> <span class="string">X-Real-IP $remote_addr;</span></span><br><span class="line">            <span class="attr">proxy_set_header</span> <span class="string">X-Scheme $scheme;</span></span><br><span class="line">            <span class="attr">proxy_pass</span> <span class="string">http//ggzy;</span></span><br><span class="line">        <span class="attr">&#125;</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure>

<p>此处外网访问的是server模块下listen设置的80端口。</p>
<p>而服务转移到了upstream ggzy模块下的127.0.0.1:1399;</p>
<p>此处是转移到了本机的1399端口，当然也可以将ip地址设置到该服务器可以访问到的其他服务器。</p>
<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h4><p><a href="https://www.jianshu.com/p/208c02c9dd1d" target="_blank" rel="noopener">https://www.jianshu.com/p/208c02c9dd1d</a></p>
<p><a href="https://juejin.im/post/5aa7704c6fb9a028bb18a993" target="_blank" rel="noopener">https://juejin.im/post/5aa7704c6fb9a028bb18a993</a></p>
<p><a href="https://www.runoob.com/w3cnote/nginx-setup-intro.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/nginx-setup-intro.html</a></p>
]]></content>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx</title>
    <url>/2020/02/27/nginx/</url>
    <content><![CDATA[<p>don’t BB , show me code!</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="built_in">..</span>.              #全局块</span><br><span class="line"></span><br><span class="line">events &#123;         #events块</span><br><span class="line">   <span class="built_in">..</span>.</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http      #http块</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">..</span>.   #http全局块</span><br><span class="line">   <span class="built_in"> server </span>       #server块</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="built_in">..</span>.       #server全局块</span><br><span class="line">        location [PATTERN]   #location块</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">..</span>.</span><br><span class="line">        &#125;</span><br><span class="line">        location [PATTERN] </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">..</span>.</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">..</span>.</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">..</span>.     #http全局块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>全局块<ul>
<li>运行nginx服务器的用户组</li>
<li>nginx进程pid存放路径</li>
<li>日志保存路径</li>
<li>配置文件引入</li>
<li>允许生成worker process数等</li>
</ul>
</li>
<li>events块：配置影响nginx服务器或与用户的网络连接<ul>
<li>每个进程最大连接数</li>
<li>选取哪种事件驱动模型处理连接请求</li>
<li>是否允许同时接受多个网络连接</li>
<li>开启多个网络连接序列化等</li>
</ul>
</li>
<li>http块：可以嵌套多个server，配置代理，缓存，日志等绝大多数功能和第三方模块的配置<ul>
<li>文件引入</li>
<li>mime-type定义</li>
<li>日志自定义</li>
<li>是否使用sendfile传输文件</li>
<li>连接超时时间</li>
<li>单连接请求数等</li>
</ul>
</li>
<li>server块：配置虚拟主机的相关参数，一个http中可以有多个server</li>
<li>location块：配置请求的路由，以及各种页面的处理情况</li>
</ul>
<h4 id="Reference："><a href="#Reference：" class="headerlink" title="Reference："></a>Reference：</h4><p><a href="https://www.runoob.com/w3cnote/nginx-install-and-config.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/nginx-install-and-config.html</a></p>
]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx WSGI Flask</title>
    <url>/2020/02/27/Nginx-WSGI-Flask/</url>
    <content><![CDATA[<img src="https://tva1.sinaimg.cn/large/00831rSTly1gcb9vz74wrj30ek0wo0wr.jpg" alt="image-20200227211857243" style="zoom:50%;" />

<p>Web服务器层： Nginx</p>
<p>Web框架层： Flask</p>
<p>WSGI层： uwsgi</p>
<h3 id="Web-服务器层"><a href="#Web-服务器层" class="headerlink" title="Web 服务器层"></a>Web 服务器层</h3><p>传统的客户端-服务器架构，服务器作用是：</p>
<ul>
<li>接收请求</li>
<li>处理请求</li>
<li>返回响应</li>
</ul>
<p>常见的web服务器有Nginx， Apache， IIS等。</p>
<h3 id="Web框架层"><a href="#Web框架层" class="headerlink" title="Web框架层"></a>Web框架层</h3><p>Web框架层的作用主要是为了方便我们开发Web应用程序，HTTP请求的动态数据就是Web框架层来提供的。常见的Web框架有Flask， Django等。下面是一个Flask框架的例子。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/hello')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure>

<p>大致说明一下上述代码的含义。</p>
<ul>
<li>创建了一个Web应用程序，名称app</li>
<li>app使得所有机器均可访问该机器的8080端口</li>
<li>HTTP协议使用URL来定位资源，路径/hello，类似于我们通过浏览器要访问<a href="http://www.xxx.com/hello" target="_blank" rel="noopener">www.xxx.com/hello</a></li>
<li>hello界面返回字符串Hello World！</li>
</ul>
<h3 id="WSGI层"><a href="#WSGI层" class="headerlink" title="WSGI层"></a>WSGI层</h3><p>WSGI(Web Server Gateway Interface)</p>
<p>WSGI只是一种接口，仅适用于python语言，它定义了Web服务器和Web应用之间的接口规范。也就是说只要Web服务器和Web应用都遵守了WSGI协议，那么Web服务器和Web应用就可以随意组合。</p>
<p>举个例子，WSGI就像是我们打电话时中间的媒介。拨通电话之后，我们只需要说话，不用担心中间语音是如何处理如何传输的，也不需要担心移动的号码如何往联通的转换，国内的号码如何和国外的号码通过之类的问题。这里的WSGI就是帮助处理和传输工作的。</p>
<h4 id="Reference："><a href="#Reference：" class="headerlink" title="Reference："></a>Reference：</h4><p><a href="https://blog.csdn.net/lihao21/article/details/52304119" target="_blank" rel="noopener">https://blog.csdn.net/lihao21/article/details/52304119</a></p>
]]></content>
      <tags>
        <tag>Flask</tag>
      </tags>
  </entry>
  <entry>
    <title>uwsgi 安装问题</title>
    <url>/2020/02/26/uwsgi-%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>使用<code>pip install uwsgi</code>安装的时候会出现各种有的没的问题，这里不再一一列举，仅放出解决方案</p>
<p>错误提示基本上都会爆出gcc的问题</p>
<p>这里需要将机器的gcc默认版本降为4.7</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">sudo</span> <span class="string">apt-get install gcc-4.7</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">/usr/bin</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">ln -s gcc-4.7 gcc</span></span><br><span class="line"><span class="attr">pip</span> <span class="string">install uwsgi</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>flask</tag>
      </tags>
  </entry>
  <entry>
    <title>flask部署pytorch</title>
    <url>/2020/02/22/flask%E9%83%A8%E7%BD%B2pytorch/</url>
    <content><![CDATA[<h3 id="用flask部署深度学习微服务"><a href="#用flask部署深度学习微服务" class="headerlink" title="用flask部署深度学习微服务"></a>用flask部署深度学习微服务</h3><p>部署期间发生了端口访问不到的问题，详情请参见nginx反向代理</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">curl https:<span class="regexp">//</span>flask.havon.cn<span class="regexp">/predict?url=https:/</span><span class="regexp">/media.minutouno.com/</span>adjuntos<span class="regexp">/150/im</span>agenes<span class="regexp">/028/</span><span class="number">853</span><span class="regexp">/0028853430.jpg</span></span><br></pre></td></tr></table></figure>







<h4 id="reference："><a href="#reference：" class="headerlink" title="reference："></a>reference：</h4><p><a href="https://medium.com/datadriveninvestor/deploy-your-pytorch-model-to-production-f69460192217" target="_blank" rel="noopener">https://medium.com/datadriveninvestor/deploy-your-pytorch-model-to-production-f69460192217</a></p>
]]></content>
  </entry>
  <entry>
    <title>kubernetes</title>
    <url>/2020/02/14/kubernetes/</url>
    <content><![CDATA[<h2 id="使用阿里源"><a href="#使用阿里源" class="headerlink" title="使用阿里源"></a>使用阿里源</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Debian/Ubuntu</span></span><br><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line">curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CentOS/RHEL/Fedora</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line">setenforce 0</span><br><span class="line">yum install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>透过跳板机访问服务器的jupyter notebook</title>
    <url>/2020/02/12/%E9%80%8F%E8%BF%87%E8%B7%B3%E6%9D%BF%E6%9C%BA%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84jupyter-notebook/</url>
    <content><![CDATA[<h3 id="reference"><a href="#reference" class="headerlink" title="reference:"></a>reference:</h3><p><a href="http://whatbeg.com/2018/12/05/jupyternotebook-1.html" target="_blank" rel="noopener">http://whatbeg.com/2018/12/05/jupyternotebook-1.html</a></p>
]]></content>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>网络端口</title>
    <url>/2020/02/12/port/</url>
    <content><![CDATA[<ol>
<li>查看端口是否允许访问</li>
</ol>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">telnet 服务器IP 端口号</span><br><span class="line">telnet <span class="number">10.10</span><span class="number">.10</span><span class="number">.8</span> <span class="number">9090</span></span><br></pre></td></tr></table></figure>



<ol start="2">
<li>查看端口是否被占用</li>
</ol>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">sudo</span> <span class="string">lsof -i:端口号</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">lsof -i:8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">上述命令会返回端口占用程序的pid</span></span><br><span class="line"><span class="attr">kill</span> <span class="string">-9 pid</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>Hi3559V200获得视频流</title>
    <url>/2019/12/05/Hi3559V200%E8%8E%B7%E5%BE%97%E8%A7%86%E9%A2%91%E6%B5%81/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="20b3e8b9073e5cd3573ae89128e2a36140e5a45c9d1cc2a3c35b248107bb0404">cd1f4316f623bc5187d8178a1129a62d5234d780661a8f46304fb3f9ab18374eb7cd70802f935b29354084321dfc948333540d315a642562e607125d42b002e890bbc3eec7341d27b69a9f499c5e63f11167fd0ab18612b3ccb9a580faa68be9e859c733093c901ced7ed72e69d05c4146c50dba578af33c5e4cf988bad41c494483e5df1f33b2ea17866f2cf57b27143c657af4dc03ca5d82a52ccc3b69c5bb2024e295ed44fee55670b0c1c9d8140360db95fa5d9d472fa4df5e82f1760e275e36026e9753bf8b7325f6069def82dcbc53edafdbbf7fae679e5e9c878f6b876a04df4c845e20da1b00702a1d684f1425cf72b595806a6ef395c9b6ec55d1e0c6368b809be01df7db4528d390ce4fe243aa2eded0ea049a68f9781738e79673b98790b95b7249e426a1f69aa70a9d49859a23689108a31e2a056c3b7613e43f1ef98da587bf79a10a0143df90b4204162bcabe150f8ad7fde0655b1ff374f6e1c6b969cd8128dbaa79087cf61f099e8deeed8fbc48adb137bd411b79b88ae5d4e49d1c506d05b546322b33caa888b646a269e8ad5d607a4ae50fd1fcb6ee27af5a869c442da5337cde31c2fb7fde1cd360a5180fbe6c71e50da181fbfd0d6beaf33bf012acd8f60f846baa63f87b1f08a357df085af9c15d67e2d7432a942aed4bdd6cb6588c8dbea61255a28f1eb609fa3f50e04b33f5ec51b995b9fa0844dee0bbced0d78b3630c432c4fa46a777b3282ee4313cf156584e296c9af055113709b0c1c14a717a34604b93d1d85c1946cf09e20bdc1f428bc564b8268a446bd8177f2a46cbd07c6dd9c4a0ae25164c7aaf8e5261e115577d0f60b6c88f1735460a30033fb9ea53c3bbb56857d4d87a4086bdfdbbebb7b155cd7fac68eda48abbf98c92d3b4a4b9832e18db78dece9191d8d52afd54b3bf15c3862381889c8b7f663ba2506f61d12f608e104fb0e0c3124a4746630fc220c5c4867515f3f09b706940f80881e5f246b035f3d96cab87ff65977b61df60b7ab70cda24a3c2608c380056d057968b43d0b8542f580aef1d11aad44ac09c82ce741e94268e8d110dd15c7c6ac2cc79ae510b1cb266f0786e8bd77214d9608eb471ba6dfed8c95fc36331e1b58ad2c10f4b1c251681ebc279fb573eb48d73c1b92f8ff18bf2e41816c2d1d56374b0a720474c47d0e0de74ab1298ab3e4e6ca5961f8ce1c701d02804db81640cf2da7ee40bc6bc0a36a32b2ee1ea8fc789cc85f8f385f27b95aeac1fe99a3facad90c1db88f69256798ad009e05eb1020a041fed55f26d9e90e3b84b8a97ad029756dac15f38b7c3b3a753ef76c1b8fbbba880737eb2181dd09b8abe149c49b23b364271629b3cbbca1a3d46c735cad75fd8d15d73e3d979f4b3ee454058ef80eae5fbb75c2e9cb77bfa18b76f4712fb701f035d3a25c0c7aa7d3004a8162f4456f56eb3eaa2d2021b0f536c5df5955d5dc2cee4ce057b3827ba92ad6f9a7591e38585c9ff067a03cc716862c442e5d2df5d98b6e555430fe8f683de0b0aee1ceec16d7d2890a24adfab632d9c61b517be32bf5a14aab429e687c87fa321fadd7edb7b3d536fef70904ee4c0b6650ec554ba98eea77e3014f4f973e35deeffaa1fa033528992638f858067be6ac9838cf2b5ab46570e33f7c44e247bf3cbb0b5f35534ae82f7bb99f01bb0b2482221d70d25f0575a173ab9855993c96836e54b784d067ee181f0858ebbdbcb8a2444d2b9e5550162b1fa79627c66acdf19097c0580ef1b4f36d9fc872c50a3a0f0fbdb1c2f0fd5c99b20109aed5d6176dc436322e9767caf4970757fc78dab09279514bf21025d1b30fbc5629d1f77747b152f18b6dadbe654fed73133041b750f73af7e0b61ac42af08015a6bbd748f247349b3f8f14a6107b8edae84453ced93919a2f343167a4cea67193471805b9a46f3fd0e2c10ae99152772dd7db1791a44781585da13d96850577738df25d0a8a4fa173d28b146bdc3cae94d234feb4dc9ca48c4a8766f353887dba2ba8f8899c20c0c9eefdc7675e06b7c9acd48e71bd420ef4889ea1f08884dd7e5ff23e3f2cf978266ec52a2e6ac970c4b5b0d4457dc9e7bfa4bd9b93bd49d0965fc80cea6cc3fbd3ae47f22d50c33dc66901cf37adf2ab62373bdb5ac87b164d5a8597291a67380f2a2b352b16aab50f63fb767be0c83e5abb4a872c6fcab1fd4eeb70a498fe25ca44465fdf59195fb75aa798</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>海思</tag>
      </tags>
  </entry>
  <entry>
    <title>用c语言操控sqlite3</title>
    <url>/2019/12/05/%E7%94%A8c%E8%AF%AD%E8%A8%80%E6%93%8D%E6%8E%A7sqlite3/</url>
    <content><![CDATA[<h3 id="C语言操控sqlite3"><a href="#C语言操控sqlite3" class="headerlink" title="C语言操控sqlite3"></a>C语言操控sqlite3</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sqlite3.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">callback</span><span class="params">(<span class="keyword">void</span> *, <span class="keyword">int</span>, <span class="keyword">char</span> **, <span class="keyword">char</span> **)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">checkvalue_callback</span><span class="params">(<span class="keyword">void</span> *value, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, </span></span></span><br><span class="line"><span class="function"><span class="params">                    <span class="keyword">char</span> **azColName)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"argc = %d\n"</span>, argc);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">strcmp</span>((<span class="keyword">char</span>*)value, argv[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    sqlite3 *db;</span><br><span class="line">    <span class="keyword">char</span> *err_msg = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> rc = sqlite3_open(<span class="string">"test.db"</span>, &amp;db);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (rc != SQLITE_OK) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Cannot open database: %s\n"</span>, </span><br><span class="line">                sqlite3_errmsg(db));</span><br><span class="line">        sqlite3_close(db);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">char</span> *sql = <span class="string">"SELECT * FROM Cars"</span>;</span><br><span class="line">        </span><br><span class="line">    rc = sqlite3_exec(db, sql, callback, <span class="number">0</span>, &amp;err_msg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* str = <span class="string">"value"</span>;</span><br><span class="line">    rc = sqlite3_exec(db, sql, callback_checkvalue, str, &amp;err_msg);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (rc != SQLITE_OK ) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Failed to select data\n"</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"SQL error: %s\n"</span>, err_msg);</span><br><span class="line"></span><br><span class="line">        sqlite3_free(err_msg);</span><br><span class="line">        sqlite3_close(db);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    sqlite3_close(db);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">callback</span><span class="params">(<span class="keyword">void</span> *NotUsed, <span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, </span></span></span><br><span class="line"><span class="function"><span class="params">                    <span class="keyword">char</span> **azColName)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    NotUsed = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; argc; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s = %s\n"</span>, azColName[i], argv[i] ? argv[i] : <span class="string">"NULL"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>main函数比较简单，只关注重点函数<code>sqlite3_exec()</code>就好</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sqlite3_exec</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  sqlite3*,                                <span class="comment">/* An open database */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">const</span> <span class="keyword">char</span> *sql,                         <span class="comment">/* SQL to be evaluated */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">int</span> (*callback)(<span class="keyword">void</span>*,<span class="keyword">int</span>,<span class="keyword">char</span>**,<span class="keyword">char</span>**),  <span class="comment">/* Callback function */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">void</span> *,                                    <span class="comment">/* 1st argument to callback */</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">char</span> **errmsg                              <span class="comment">/* Error msg written here */</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure>

<p>关注一下callback函数，此处callback函数的第一个参数同时作为sqlite3_exec函数的第四个参数。而此参数的类型是<code>void*</code><br>关注一下上述的<code>callback_checkvalue</code>函数。<br>此函数内针对参数进行了类型转换。<br>我们首先在调用<code>sqlite3_exec</code>时保证了传入的参数类型为<code>char*</code>，此处这样做的目的是为了可以与<code>char **argv</code>形成对应。<br>虽然我们传入的时候保证了参数为<code>char*</code> 类型，但是在函数传值的时候又会将其默认为<code>void *</code>，因此我们在使用<code>strcmp</code>函数时，又将其进行了强制类型转换。</p>
]]></content>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo new后用Typora自动打开文档</title>
    <url>/2019/12/04/hexo-new%E5%90%8E%E7%94%A8Typora%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h3 id="hexo-new-post后直接打开md文件"><a href="#hexo-new-post后直接打开md文件" class="headerlink" title="hexo new post后直接打开md文件"></a>hexo new post后直接打开md文件</h3><p>在hexo的根目录下新建文件夹scripts<br>然后创建一个js的文件，例如AutoOpenEditor.js</p>
<figure class="highlight scilab"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">exec</span> = require(<span class="string">'child_process'</span>).<span class="built_in">exec</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hexo 2.x</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span><span class="params">(data)</span>&#123;</span></span><br><span class="line"><span class="built_in">exec</span>(<span class="string">'open -a "</span>/Applications/Typora.app<span class="string">" '</span> + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>防火墙</title>
    <url>/2019/12/04/%E9%98%B2%E7%81%AB%E5%A2%99/</url>
    <content><![CDATA[<p>防火墙</p>
<p><code>systemctl status ufw</code></p>
<p><code>systemctl status iptables</code></p>
<p><code>systemctl status firewalld</code></p>
<p><code>sudo firewall-cmd --add-port=8888/tcp --permanent</code></p>
<p><code>sudo firewall-cmd --reload</code></p>
<p><code>sudo systemctl stop firewalld</code></p>
<p>端口侦测</p>
<p><code>sudo lsof -i:8888</code></p>
<p><code>nc -vuz 210.75.252.41 80</code></p>
<p><code>traceroute 210.75.252.41</code></p>
<p>查看网络经过的路径</p>
<p><code>nmap</code></p>
]]></content>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>SSH安全连接</title>
    <url>/2019/12/03/SSH%E5%AE%89%E5%85%A8%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="9ea3d8c414523d9f1e4c127660df930c49cfa3f2272710b1686c0341b19b6c14"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCodeRemote</title>
    <url>/2019/12/03/VSCodeRemote/</url>
    <content><![CDATA[<p>有时我们希望在公司之外方便的进行开发。因此需要跨过跳板机进入公司内网。因此下面的操作就很有必要了。</p>
<h3 id="VSCode-remote"><a href="#VSCode-remote" class="headerlink" title="VSCode remote"></a>VSCode remote</h3><p>我们来编写一下配置<br><code>~/.ssh/config</code></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Host host</span><br><span class="line"><span class="built_in">	User </span><span class="string">'最终目标机username'</span></span><br><span class="line">	HostName <span class="string">'最终目标机IP'</span></span><br><span class="line"><span class="built_in">	Port </span>22</span><br><span class="line">	ProxyCommand ssh -p <span class="string">'跳板端口号'</span> 跳板username@跳板IP nc %h %p</span><br></pre></td></tr></table></figure>


<h3 id="proxycommand"><a href="#proxycommand" class="headerlink" title="proxycommand"></a>proxycommand</h3><p><code>ssh -p port jumpUser@jumpIP nc %h %p</code>  </p>
<p><code>-p</code> 跳板机的ssh端口<br><code>nc</code> netcat(nc) command<br><code>%h</code> Hostname 即最终目标机IP<br><code>%p</code> Hostname的port，即<code>22</code>  </p>
<p><a href="https://www.cyberciti.biz/faq/linux-unix-ssh-proxycommand-passing-through-one-host-gateway-server/" target="_blank" rel="noopener">https://www.cyberciti.biz/faq/linux-unix-ssh-proxycommand-passing-through-one-host-gateway-server/</a></p>
]]></content>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
</search>
